server.port=8081

#Configuration using springboot data

# ddl-auto = none, update, validate, create, create-drop
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

#Supaya Namanya Persis dengan @Column("personBean") -> "personbean" bukan "person_bean"
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl


# Comment out if using anything else than H2 (e.g. MySQL or PostgreSQL)
#INI OPSIONAL
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#Supaya Namanya Persis dengan @Column("personBean") -> "personBean" case Sensitive ya
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect


## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url = jdbc:mysql://localhost:3306/demo_db_2?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&useSSL=false
# spring.datasource.url=jdbc:postgresql://localhost:5432/demo_db_2?currentSchema=public
spring.datasource.username = root
spring.datasource.password = hacker

spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# spring.datasource.driver-class-name=org.postgresql.Driver

#spring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
#spring.datasource.username=sa
#spring.datasource.password=sa

